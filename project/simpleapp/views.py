# Импортируем класс, который говорит нам о том,
# что в этом представлении мы будем выводить список объектов из БД
from django.views.generic import ListView, DetailView
from .models import Product, NewsPortal


class ProductsList(ListView):
    # Указываем модель, объекты которой мы будем выводить
    model = Product
    # Поле, которое будет использоваться для сортировки объектов
    ordering = 'name'  # сортировка по расположению в порядке возрастания, или убывания '-name'

    # queryset = Product.objects.filter(
    #     price__lt=65990
    # ).order_by('name')  # отсортировать по цене ниже чем 50000 и с помощью .order_by добавить другую
    # # сортировку ordering = 'name'

    # Указываем имя шаблона, в котором будут все инструкции о том,
    # как именно пользователю должны быть показаны наши объекты
    template_name = 'flatpages/products.html'
    # Это имя списка, в котором будут лежать все объекты.
    # Его надо указать, чтобы обратиться к списку объектов в html-шаблоне.
    context_object_name = 'products'

# ProductDetail, которое будет выдавать информацию об одном товаре
class ProductDetail(DetailView):
    # Модель всё та же, но мы хотим получать информацию по отдельному товару
    model = Product
    # Используем другой шаблон — product.html
    template_name = 'flatpages/product.html'
    # Название объекта, в котором будет выбранный пользователем продукт
    context_object_name = 'product'
# Create your views here.


#______________________________________________________________________________________________________________

class NewsList(ListView):
    # Указываем модель, объекты которой мы будем выводить
    news_model = NewsPortal
    # ___________________________________________________________

    # Здесь будит Фильтрация
    # по новизне новости
    # ___________________________________________________________
    # Указываем имя шаблона, в котором будут все инструкции о том,
    # как именно пользователю должны быть показаны наши объекты
    news_template_name = 'flatpages/news.html'
    # Это имя списка, в котором будут лежать все объекты.
    # Его надо указать, чтобы обратиться к списку объектов в html-шаблоне.
    news_context_object_name = 'news'

# NewsDetail, которое будет выдавать информацию об одной новости
class NewsDetail(DetailView):
    # Модель всё та же, но мы хотим получать информацию по отдельной новости
    news_model = NewsPortal
    # Используем другой шаблон — new.html
    news_template_name = 'flatpages/new.html'
    # Название объекта, в котором будет выбранный пользователем новость
    news_context_object_name = 'new'